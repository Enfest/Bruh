// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "./generated/type-graphql"
}

enum CategoryFormQuestionType {
  SELECT
  MULTISELECT
  TEXT
}

model CategoryFormQuestionOrder {
  id         Int @id @default(autoincrement())
  pageId     Int
  questionId Int
  order      Int

  page CategoryFormQuestionPage @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([pageId, order])
  @@unique([pageId, questionId])
}

model CategoryFormQuestionPage {
  id          Int    @id @default(autoincrement())
  optionId    Int?
  pageStackId Int?
  pageOrderId Int?
  title       String @default("")
  description String @default("")
  questionIds Int[]

  questionOrders CategoryFormQuestionOrder[]
  pageOrder      CategoryFormQuestionPageOrder[]
  option         CategoryFormQuestionOption?     @relation(fields: [optionId], references: [id])
  pageStack      CategoryFormPageStack?          @relation(fields: [pageStackId], references: [id])
  // pageOrder CategoryFormQuestionPageOrder? @relation(fields: [pageOrderId], references: [id])

  @@unique([optionId])
}

model CategoryFormQuestionOption {
  id                      Int  @id @default(autoincrement())
  questionId              Int?
  categoryFormPageStackId Int?

  text String
  page CategoryFormQuestionPage?

  question                        CategoryFormQuestion?             @relation("QuestionOptions", fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryFormQuestionOptionOrder CategoryFormQuestionOptionOrder[]
}

model CategoryFormQuestionPageOrder {
  id          Int @id @default(autoincrement())
  pageStackId Int
  pageId      Int
  order       Int

  pageStack CategoryFormPageStack    @relation(fields: [pageStackId], references: [id], onDelete: Cascade)
  page      CategoryFormQuestionPage @relation(fields: [pageId], references: [id], onDelete: Cascade)

  @@unique([pageStackId, pageId, order])
}

model CategoryFormPageStack {
  id         Int                             @id @default(autoincrement())
  hash       String                          @unique()
  pages      CategoryFormQuestionPage[]
  pageOrders CategoryFormQuestionPageOrder[]
}

model CategoryFormQuestion {
  id          Int                      @id @unique
  type        CategoryFormQuestionType
  title       String
  description String

  // subQuestionOrders CategoryFormSubQuestionOrder[] // Add this line
  options CategoryFormQuestionOption[] @relation("QuestionOptions")
}

model CategoryFormQuestionOptionOrder {
  id         Int @id @default(autoincrement())
  questionId Int
  optionId   Int
  order      Int

  // question CategoryFormQuestion       @relation(fields: [questionId], references: [id], onDelete: Cascade)
  option CategoryFormQuestionOption @relation(fields: [optionId], references: [id], onDelete: Cascade)

  @@unique([questionId, order])
  @@unique([questionId, optionId])
}
